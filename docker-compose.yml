version: "3.8"
services:
  db:
    image: postgres
    container_name: fastapi_postgres
    restart: always
    env_file:
      - .env    
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis
    command: ["redis-server", "--save", "60", "1"]
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CREATE_TOPICS=${KAFKA_CREATE_TOPICS:-notifications:1:1}
    ports:
      - "9092:9092"
    volumes:
      - kafkadata:/bitnami/kafka
    restart: unless-stopped

  # fastapi:
  #   build: ./backend
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - .:/app/app  # for hot reload (optional)
  #   restart: always
  #   depends_on:
  #     - db
  #   environment:
  #     PYTHONUNBUFFERED: 1
  #   env_file:
  #     - .env

volumes:
  postgres_data:
  redisdata:
  kafkadata:
